// Code generated by protoc-gen-go. DO NOT EDIT.
// source: greetercenter/greetercenter.proto

package greetercenter

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BreakfastEatRequestMessage struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BreakfastEatRequestMessage) Reset()         { *m = BreakfastEatRequestMessage{} }
func (m *BreakfastEatRequestMessage) String() string { return proto.CompactTextString(m) }
func (*BreakfastEatRequestMessage) ProtoMessage()    {}
func (*BreakfastEatRequestMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_5bd7cfea030ce2b7, []int{0}
}

func (m *BreakfastEatRequestMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BreakfastEatRequestMessage.Unmarshal(m, b)
}
func (m *BreakfastEatRequestMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BreakfastEatRequestMessage.Marshal(b, m, deterministic)
}
func (m *BreakfastEatRequestMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BreakfastEatRequestMessage.Merge(m, src)
}
func (m *BreakfastEatRequestMessage) XXX_Size() int {
	return xxx_messageInfo_BreakfastEatRequestMessage.Size(m)
}
func (m *BreakfastEatRequestMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_BreakfastEatRequestMessage.DiscardUnknown(m)
}

var xxx_messageInfo_BreakfastEatRequestMessage proto.InternalMessageInfo

func (m *BreakfastEatRequestMessage) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type BreakfastEatResponseMessage struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	Code                 int32    `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Data                 string   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BreakfastEatResponseMessage) Reset()         { *m = BreakfastEatResponseMessage{} }
func (m *BreakfastEatResponseMessage) String() string { return proto.CompactTextString(m) }
func (*BreakfastEatResponseMessage) ProtoMessage()    {}
func (*BreakfastEatResponseMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_5bd7cfea030ce2b7, []int{1}
}

func (m *BreakfastEatResponseMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BreakfastEatResponseMessage.Unmarshal(m, b)
}
func (m *BreakfastEatResponseMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BreakfastEatResponseMessage.Marshal(b, m, deterministic)
}
func (m *BreakfastEatResponseMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BreakfastEatResponseMessage.Merge(m, src)
}
func (m *BreakfastEatResponseMessage) XXX_Size() int {
	return xxx_messageInfo_BreakfastEatResponseMessage.Size(m)
}
func (m *BreakfastEatResponseMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_BreakfastEatResponseMessage.DiscardUnknown(m)
}

var xxx_messageInfo_BreakfastEatResponseMessage proto.InternalMessageInfo

func (m *BreakfastEatResponseMessage) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *BreakfastEatResponseMessage) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *BreakfastEatResponseMessage) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type LunchEatRequestMessage struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LunchEatRequestMessage) Reset()         { *m = LunchEatRequestMessage{} }
func (m *LunchEatRequestMessage) String() string { return proto.CompactTextString(m) }
func (*LunchEatRequestMessage) ProtoMessage()    {}
func (*LunchEatRequestMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_5bd7cfea030ce2b7, []int{2}
}

func (m *LunchEatRequestMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LunchEatRequestMessage.Unmarshal(m, b)
}
func (m *LunchEatRequestMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LunchEatRequestMessage.Marshal(b, m, deterministic)
}
func (m *LunchEatRequestMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LunchEatRequestMessage.Merge(m, src)
}
func (m *LunchEatRequestMessage) XXX_Size() int {
	return xxx_messageInfo_LunchEatRequestMessage.Size(m)
}
func (m *LunchEatRequestMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_LunchEatRequestMessage.DiscardUnknown(m)
}

var xxx_messageInfo_LunchEatRequestMessage proto.InternalMessageInfo

func (m *LunchEatRequestMessage) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type LunchEatResponseMessage struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	Code                 int32    `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Data                 string   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LunchEatResponseMessage) Reset()         { *m = LunchEatResponseMessage{} }
func (m *LunchEatResponseMessage) String() string { return proto.CompactTextString(m) }
func (*LunchEatResponseMessage) ProtoMessage()    {}
func (*LunchEatResponseMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_5bd7cfea030ce2b7, []int{3}
}

func (m *LunchEatResponseMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LunchEatResponseMessage.Unmarshal(m, b)
}
func (m *LunchEatResponseMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LunchEatResponseMessage.Marshal(b, m, deterministic)
}
func (m *LunchEatResponseMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LunchEatResponseMessage.Merge(m, src)
}
func (m *LunchEatResponseMessage) XXX_Size() int {
	return xxx_messageInfo_LunchEatResponseMessage.Size(m)
}
func (m *LunchEatResponseMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_LunchEatResponseMessage.DiscardUnknown(m)
}

var xxx_messageInfo_LunchEatResponseMessage proto.InternalMessageInfo

func (m *LunchEatResponseMessage) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *LunchEatResponseMessage) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *LunchEatResponseMessage) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type DinnerEatRequestMessage struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DinnerEatRequestMessage) Reset()         { *m = DinnerEatRequestMessage{} }
func (m *DinnerEatRequestMessage) String() string { return proto.CompactTextString(m) }
func (*DinnerEatRequestMessage) ProtoMessage()    {}
func (*DinnerEatRequestMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_5bd7cfea030ce2b7, []int{4}
}

func (m *DinnerEatRequestMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DinnerEatRequestMessage.Unmarshal(m, b)
}
func (m *DinnerEatRequestMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DinnerEatRequestMessage.Marshal(b, m, deterministic)
}
func (m *DinnerEatRequestMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DinnerEatRequestMessage.Merge(m, src)
}
func (m *DinnerEatRequestMessage) XXX_Size() int {
	return xxx_messageInfo_DinnerEatRequestMessage.Size(m)
}
func (m *DinnerEatRequestMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_DinnerEatRequestMessage.DiscardUnknown(m)
}

var xxx_messageInfo_DinnerEatRequestMessage proto.InternalMessageInfo

func (m *DinnerEatRequestMessage) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type DinnerEatResponseMessage struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	Code                 int32    `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Data                 string   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DinnerEatResponseMessage) Reset()         { *m = DinnerEatResponseMessage{} }
func (m *DinnerEatResponseMessage) String() string { return proto.CompactTextString(m) }
func (*DinnerEatResponseMessage) ProtoMessage()    {}
func (*DinnerEatResponseMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_5bd7cfea030ce2b7, []int{5}
}

func (m *DinnerEatResponseMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DinnerEatResponseMessage.Unmarshal(m, b)
}
func (m *DinnerEatResponseMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DinnerEatResponseMessage.Marshal(b, m, deterministic)
}
func (m *DinnerEatResponseMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DinnerEatResponseMessage.Merge(m, src)
}
func (m *DinnerEatResponseMessage) XXX_Size() int {
	return xxx_messageInfo_DinnerEatResponseMessage.Size(m)
}
func (m *DinnerEatResponseMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_DinnerEatResponseMessage.DiscardUnknown(m)
}

var xxx_messageInfo_DinnerEatResponseMessage proto.InternalMessageInfo

func (m *DinnerEatResponseMessage) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *DinnerEatResponseMessage) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DinnerEatResponseMessage) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type BreakfastDrinkRequestMessage struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BreakfastDrinkRequestMessage) Reset()         { *m = BreakfastDrinkRequestMessage{} }
func (m *BreakfastDrinkRequestMessage) String() string { return proto.CompactTextString(m) }
func (*BreakfastDrinkRequestMessage) ProtoMessage()    {}
func (*BreakfastDrinkRequestMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_5bd7cfea030ce2b7, []int{6}
}

func (m *BreakfastDrinkRequestMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BreakfastDrinkRequestMessage.Unmarshal(m, b)
}
func (m *BreakfastDrinkRequestMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BreakfastDrinkRequestMessage.Marshal(b, m, deterministic)
}
func (m *BreakfastDrinkRequestMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BreakfastDrinkRequestMessage.Merge(m, src)
}
func (m *BreakfastDrinkRequestMessage) XXX_Size() int {
	return xxx_messageInfo_BreakfastDrinkRequestMessage.Size(m)
}
func (m *BreakfastDrinkRequestMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_BreakfastDrinkRequestMessage.DiscardUnknown(m)
}

var xxx_messageInfo_BreakfastDrinkRequestMessage proto.InternalMessageInfo

func (m *BreakfastDrinkRequestMessage) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type BreakfastDrinkResponseMessage struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	Code                 int32    `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Data                 string   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BreakfastDrinkResponseMessage) Reset()         { *m = BreakfastDrinkResponseMessage{} }
func (m *BreakfastDrinkResponseMessage) String() string { return proto.CompactTextString(m) }
func (*BreakfastDrinkResponseMessage) ProtoMessage()    {}
func (*BreakfastDrinkResponseMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_5bd7cfea030ce2b7, []int{7}
}

func (m *BreakfastDrinkResponseMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BreakfastDrinkResponseMessage.Unmarshal(m, b)
}
func (m *BreakfastDrinkResponseMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BreakfastDrinkResponseMessage.Marshal(b, m, deterministic)
}
func (m *BreakfastDrinkResponseMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BreakfastDrinkResponseMessage.Merge(m, src)
}
func (m *BreakfastDrinkResponseMessage) XXX_Size() int {
	return xxx_messageInfo_BreakfastDrinkResponseMessage.Size(m)
}
func (m *BreakfastDrinkResponseMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_BreakfastDrinkResponseMessage.DiscardUnknown(m)
}

var xxx_messageInfo_BreakfastDrinkResponseMessage proto.InternalMessageInfo

func (m *BreakfastDrinkResponseMessage) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *BreakfastDrinkResponseMessage) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *BreakfastDrinkResponseMessage) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type LunchDrinkRequestMessage struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LunchDrinkRequestMessage) Reset()         { *m = LunchDrinkRequestMessage{} }
func (m *LunchDrinkRequestMessage) String() string { return proto.CompactTextString(m) }
func (*LunchDrinkRequestMessage) ProtoMessage()    {}
func (*LunchDrinkRequestMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_5bd7cfea030ce2b7, []int{8}
}

func (m *LunchDrinkRequestMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LunchDrinkRequestMessage.Unmarshal(m, b)
}
func (m *LunchDrinkRequestMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LunchDrinkRequestMessage.Marshal(b, m, deterministic)
}
func (m *LunchDrinkRequestMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LunchDrinkRequestMessage.Merge(m, src)
}
func (m *LunchDrinkRequestMessage) XXX_Size() int {
	return xxx_messageInfo_LunchDrinkRequestMessage.Size(m)
}
func (m *LunchDrinkRequestMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_LunchDrinkRequestMessage.DiscardUnknown(m)
}

var xxx_messageInfo_LunchDrinkRequestMessage proto.InternalMessageInfo

func (m *LunchDrinkRequestMessage) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type LunchDrinkResponseMessage struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	Code                 int32    `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Data                 string   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LunchDrinkResponseMessage) Reset()         { *m = LunchDrinkResponseMessage{} }
func (m *LunchDrinkResponseMessage) String() string { return proto.CompactTextString(m) }
func (*LunchDrinkResponseMessage) ProtoMessage()    {}
func (*LunchDrinkResponseMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_5bd7cfea030ce2b7, []int{9}
}

func (m *LunchDrinkResponseMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LunchDrinkResponseMessage.Unmarshal(m, b)
}
func (m *LunchDrinkResponseMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LunchDrinkResponseMessage.Marshal(b, m, deterministic)
}
func (m *LunchDrinkResponseMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LunchDrinkResponseMessage.Merge(m, src)
}
func (m *LunchDrinkResponseMessage) XXX_Size() int {
	return xxx_messageInfo_LunchDrinkResponseMessage.Size(m)
}
func (m *LunchDrinkResponseMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_LunchDrinkResponseMessage.DiscardUnknown(m)
}

var xxx_messageInfo_LunchDrinkResponseMessage proto.InternalMessageInfo

func (m *LunchDrinkResponseMessage) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *LunchDrinkResponseMessage) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *LunchDrinkResponseMessage) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type DinnerDrinkRequestMessage struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DinnerDrinkRequestMessage) Reset()         { *m = DinnerDrinkRequestMessage{} }
func (m *DinnerDrinkRequestMessage) String() string { return proto.CompactTextString(m) }
func (*DinnerDrinkRequestMessage) ProtoMessage()    {}
func (*DinnerDrinkRequestMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_5bd7cfea030ce2b7, []int{10}
}

func (m *DinnerDrinkRequestMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DinnerDrinkRequestMessage.Unmarshal(m, b)
}
func (m *DinnerDrinkRequestMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DinnerDrinkRequestMessage.Marshal(b, m, deterministic)
}
func (m *DinnerDrinkRequestMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DinnerDrinkRequestMessage.Merge(m, src)
}
func (m *DinnerDrinkRequestMessage) XXX_Size() int {
	return xxx_messageInfo_DinnerDrinkRequestMessage.Size(m)
}
func (m *DinnerDrinkRequestMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_DinnerDrinkRequestMessage.DiscardUnknown(m)
}

var xxx_messageInfo_DinnerDrinkRequestMessage proto.InternalMessageInfo

func (m *DinnerDrinkRequestMessage) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type DinnerDrinkResponseMessage struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	Code                 int32    `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Data                 string   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DinnerDrinkResponseMessage) Reset()         { *m = DinnerDrinkResponseMessage{} }
func (m *DinnerDrinkResponseMessage) String() string { return proto.CompactTextString(m) }
func (*DinnerDrinkResponseMessage) ProtoMessage()    {}
func (*DinnerDrinkResponseMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_5bd7cfea030ce2b7, []int{11}
}

func (m *DinnerDrinkResponseMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DinnerDrinkResponseMessage.Unmarshal(m, b)
}
func (m *DinnerDrinkResponseMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DinnerDrinkResponseMessage.Marshal(b, m, deterministic)
}
func (m *DinnerDrinkResponseMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DinnerDrinkResponseMessage.Merge(m, src)
}
func (m *DinnerDrinkResponseMessage) XXX_Size() int {
	return xxx_messageInfo_DinnerDrinkResponseMessage.Size(m)
}
func (m *DinnerDrinkResponseMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_DinnerDrinkResponseMessage.DiscardUnknown(m)
}

var xxx_messageInfo_DinnerDrinkResponseMessage proto.InternalMessageInfo

func (m *DinnerDrinkResponseMessage) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *DinnerDrinkResponseMessage) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DinnerDrinkResponseMessage) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func init() {
	proto.RegisterType((*BreakfastEatRequestMessage)(nil), "greetercenter.BreakfastEatRequestMessage")
	proto.RegisterType((*BreakfastEatResponseMessage)(nil), "greetercenter.BreakfastEatResponseMessage")
	proto.RegisterType((*LunchEatRequestMessage)(nil), "greetercenter.LunchEatRequestMessage")
	proto.RegisterType((*LunchEatResponseMessage)(nil), "greetercenter.LunchEatResponseMessage")
	proto.RegisterType((*DinnerEatRequestMessage)(nil), "greetercenter.DinnerEatRequestMessage")
	proto.RegisterType((*DinnerEatResponseMessage)(nil), "greetercenter.DinnerEatResponseMessage")
	proto.RegisterType((*BreakfastDrinkRequestMessage)(nil), "greetercenter.BreakfastDrinkRequestMessage")
	proto.RegisterType((*BreakfastDrinkResponseMessage)(nil), "greetercenter.BreakfastDrinkResponseMessage")
	proto.RegisterType((*LunchDrinkRequestMessage)(nil), "greetercenter.LunchDrinkRequestMessage")
	proto.RegisterType((*LunchDrinkResponseMessage)(nil), "greetercenter.LunchDrinkResponseMessage")
	proto.RegisterType((*DinnerDrinkRequestMessage)(nil), "greetercenter.DinnerDrinkRequestMessage")
	proto.RegisterType((*DinnerDrinkResponseMessage)(nil), "greetercenter.DinnerDrinkResponseMessage")
}

func init() { proto.RegisterFile("greetercenter/greetercenter.proto", fileDescriptor_5bd7cfea030ce2b7) }

var fileDescriptor_5bd7cfea030ce2b7 = []byte{
	// 370 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x94, 0xdd, 0x4e, 0xf2, 0x40,
	0x10, 0x86, 0x3f, 0xe0, 0xc3, 0xc8, 0xf8, 0x13, 0x33, 0x07, 0x52, 0xaa, 0x26, 0xd8, 0x44, 0x29,
	0x8a, 0x60, 0xf0, 0x0e, 0x0c, 0x9c, 0xe9, 0x09, 0xfe, 0xc5, 0x98, 0x98, 0xac, 0x30, 0x56, 0x42,
	0xd8, 0xe2, 0xee, 0x72, 0x55, 0x5e, 0x84, 0xb7, 0x66, 0x5a, 0x04, 0xba, 0x9b, 0xb6, 0xf6, 0xa0,
	0x67, 0xd3, 0xcd, 0xfb, 0xce, 0x3c, 0x9d, 0x9d, 0x59, 0x38, 0xf6, 0x04, 0x91, 0x22, 0x31, 0x24,
	0xae, 0x48, 0x74, 0xb4, 0xaf, 0xf6, 0x4c, 0xf8, 0xca, 0xc7, 0x1d, 0xed, 0xd0, 0xb9, 0x04, 0xfb,
	0x5a, 0x10, 0x9b, 0xbc, 0x33, 0xa9, 0xfa, 0x4c, 0x0d, 0xe8, 0x73, 0x4e, 0x52, 0xdd, 0x92, 0x94,
	0xcc, 0x23, 0x44, 0xf8, 0xcf, 0xd9, 0x94, 0xac, 0x42, 0xbd, 0xe0, 0x56, 0x06, 0x61, 0xec, 0x3c,
	0xc1, 0x81, 0xee, 0x90, 0x33, 0x9f, 0x4b, 0x5a, 0x5a, 0xf6, 0xa0, 0x34, 0x95, 0xde, 0xaf, 0x23,
	0x08, 0x83, 0x24, 0x43, 0x7f, 0x44, 0x56, 0xb1, 0x5e, 0x70, 0xcb, 0x83, 0x30, 0x0e, 0xce, 0x46,
	0x4c, 0x31, 0xab, 0xb4, 0x48, 0x1c, 0xc4, 0x4e, 0x0b, 0xf6, 0x6f, 0xe6, 0x7c, 0xf8, 0x91, 0x0d,
	0xe3, 0x0e, 0xaa, 0x6b, 0x75, 0x5e, 0x08, 0x17, 0x50, 0xed, 0x8d, 0x39, 0x27, 0x91, 0x8d, 0xe1,
	0x1e, 0xac, 0x88, 0x3c, 0x2f, 0x88, 0x2e, 0x1c, 0xae, 0x1a, 0xdc, 0x13, 0x63, 0x3e, 0xc9, 0x40,
	0xf2, 0x0c, 0x47, 0xa6, 0x27, 0x2f, 0x9c, 0x36, 0x58, 0x61, 0xa3, 0xb3, 0xa2, 0x3c, 0x40, 0x2d,
	0xaa, 0xcf, 0x0b, 0xa3, 0x03, 0xb5, 0x45, 0xaf, 0xb3, 0x72, 0x3c, 0x82, 0xad, 0x19, 0x72, 0x02,
	0xe9, 0x7e, 0x15, 0xa1, 0xd4, 0x67, 0x0a, 0x3d, 0xd8, 0x8e, 0xee, 0x01, 0x36, 0xdb, 0xfa, 0xba,
	0x25, 0xaf, 0x95, 0x7d, 0x96, 0x2a, 0xd5, 0x40, 0x9d, 0x7f, 0xf8, 0x02, 0x9b, 0xcb, 0x49, 0xc7,
	0x13, 0xc3, 0x19, 0xbf, 0x30, 0xf6, 0x69, 0xa2, 0xcc, 0x4c, 0xfe, 0x0a, 0x95, 0xd5, 0x08, 0xa3,
	0x69, 0x4b, 0xd8, 0x05, 0xbb, 0x91, 0xac, 0x33, 0xf2, 0x77, 0xbf, 0x8b, 0x50, 0x0e, 0x2f, 0x00,
	0xa7, 0xb0, 0xab, 0x8f, 0x28, 0x9e, 0x27, 0xb5, 0x21, 0xe6, 0x8a, 0xed, 0xd6, 0x1f, 0x62, 0xf3,
	0xc7, 0x18, 0xc0, 0x7a, 0x0c, 0xb1, 0x11, 0xd7, 0x90, 0xb8, 0x32, 0x6e, 0x8a, 0xd0, 0x2c, 0x31,
	0x82, 0xad, 0xc8, 0x84, 0xa1, 0x1b, 0xdb, 0x95, 0xb8, 0x22, 0xcd, 0x34, 0xa5, 0x51, 0xe5, 0x6d,
	0x23, 0x7c, 0xb7, 0xaf, 0x7e, 0x02, 0x00, 0x00, 0xff, 0xff, 0x3b, 0xda, 0x2a, 0xdb, 0xdc, 0x05,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EatClient is the client API for Eat service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EatClient interface {
	BreakfastEat(ctx context.Context, in *BreakfastEatRequestMessage, opts ...grpc.CallOption) (*BreakfastEatResponseMessage, error)
	LunchEat(ctx context.Context, in *LunchEatRequestMessage, opts ...grpc.CallOption) (*LunchEatResponseMessage, error)
	DinnerEat(ctx context.Context, in *DinnerEatRequestMessage, opts ...grpc.CallOption) (*DinnerEatResponseMessage, error)
}

type eatClient struct {
	cc *grpc.ClientConn
}

func NewEatClient(cc *grpc.ClientConn) EatClient {
	return &eatClient{cc}
}

func (c *eatClient) BreakfastEat(ctx context.Context, in *BreakfastEatRequestMessage, opts ...grpc.CallOption) (*BreakfastEatResponseMessage, error) {
	out := new(BreakfastEatResponseMessage)
	err := c.cc.Invoke(ctx, "/greetercenter.Eat/BreakfastEat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eatClient) LunchEat(ctx context.Context, in *LunchEatRequestMessage, opts ...grpc.CallOption) (*LunchEatResponseMessage, error) {
	out := new(LunchEatResponseMessage)
	err := c.cc.Invoke(ctx, "/greetercenter.Eat/LunchEat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eatClient) DinnerEat(ctx context.Context, in *DinnerEatRequestMessage, opts ...grpc.CallOption) (*DinnerEatResponseMessage, error) {
	out := new(DinnerEatResponseMessage)
	err := c.cc.Invoke(ctx, "/greetercenter.Eat/DinnerEat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EatServer is the server API for Eat service.
type EatServer interface {
	BreakfastEat(context.Context, *BreakfastEatRequestMessage) (*BreakfastEatResponseMessage, error)
	LunchEat(context.Context, *LunchEatRequestMessage) (*LunchEatResponseMessage, error)
	DinnerEat(context.Context, *DinnerEatRequestMessage) (*DinnerEatResponseMessage, error)
}

// UnimplementedEatServer can be embedded to have forward compatible implementations.
type UnimplementedEatServer struct {
}

func (*UnimplementedEatServer) BreakfastEat(ctx context.Context, req *BreakfastEatRequestMessage) (*BreakfastEatResponseMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BreakfastEat not implemented")
}
func (*UnimplementedEatServer) LunchEat(ctx context.Context, req *LunchEatRequestMessage) (*LunchEatResponseMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LunchEat not implemented")
}
func (*UnimplementedEatServer) DinnerEat(ctx context.Context, req *DinnerEatRequestMessage) (*DinnerEatResponseMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DinnerEat not implemented")
}

func RegisterEatServer(s *grpc.Server, srv EatServer) {
	s.RegisterService(&_Eat_serviceDesc, srv)
}

func _Eat_BreakfastEat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BreakfastEatRequestMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EatServer).BreakfastEat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/greetercenter.Eat/BreakfastEat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EatServer).BreakfastEat(ctx, req.(*BreakfastEatRequestMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _Eat_LunchEat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LunchEatRequestMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EatServer).LunchEat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/greetercenter.Eat/LunchEat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EatServer).LunchEat(ctx, req.(*LunchEatRequestMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _Eat_DinnerEat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DinnerEatRequestMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EatServer).DinnerEat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/greetercenter.Eat/DinnerEat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EatServer).DinnerEat(ctx, req.(*DinnerEatRequestMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _Eat_serviceDesc = grpc.ServiceDesc{
	ServiceName: "greetercenter.Eat",
	HandlerType: (*EatServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "BreakfastEat",
			Handler:    _Eat_BreakfastEat_Handler,
		},
		{
			MethodName: "LunchEat",
			Handler:    _Eat_LunchEat_Handler,
		},
		{
			MethodName: "DinnerEat",
			Handler:    _Eat_DinnerEat_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "greetercenter/greetercenter.proto",
}

// DrinkClient is the client API for Drink service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DrinkClient interface {
	BreakfastDrink(ctx context.Context, in *BreakfastDrinkRequestMessage, opts ...grpc.CallOption) (*BreakfastDrinkResponseMessage, error)
	LunchDrink(ctx context.Context, in *LunchDrinkRequestMessage, opts ...grpc.CallOption) (*LunchDrinkResponseMessage, error)
	DinnerDrink(ctx context.Context, in *DinnerDrinkRequestMessage, opts ...grpc.CallOption) (*DinnerDrinkResponseMessage, error)
}

type drinkClient struct {
	cc *grpc.ClientConn
}

func NewDrinkClient(cc *grpc.ClientConn) DrinkClient {
	return &drinkClient{cc}
}

func (c *drinkClient) BreakfastDrink(ctx context.Context, in *BreakfastDrinkRequestMessage, opts ...grpc.CallOption) (*BreakfastDrinkResponseMessage, error) {
	out := new(BreakfastDrinkResponseMessage)
	err := c.cc.Invoke(ctx, "/greetercenter.Drink/BreakfastDrink", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drinkClient) LunchDrink(ctx context.Context, in *LunchDrinkRequestMessage, opts ...grpc.CallOption) (*LunchDrinkResponseMessage, error) {
	out := new(LunchDrinkResponseMessage)
	err := c.cc.Invoke(ctx, "/greetercenter.Drink/LunchDrink", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drinkClient) DinnerDrink(ctx context.Context, in *DinnerDrinkRequestMessage, opts ...grpc.CallOption) (*DinnerDrinkResponseMessage, error) {
	out := new(DinnerDrinkResponseMessage)
	err := c.cc.Invoke(ctx, "/greetercenter.Drink/DinnerDrink", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DrinkServer is the server API for Drink service.
type DrinkServer interface {
	BreakfastDrink(context.Context, *BreakfastDrinkRequestMessage) (*BreakfastDrinkResponseMessage, error)
	LunchDrink(context.Context, *LunchDrinkRequestMessage) (*LunchDrinkResponseMessage, error)
	DinnerDrink(context.Context, *DinnerDrinkRequestMessage) (*DinnerDrinkResponseMessage, error)
}

// UnimplementedDrinkServer can be embedded to have forward compatible implementations.
type UnimplementedDrinkServer struct {
}

func (*UnimplementedDrinkServer) BreakfastDrink(ctx context.Context, req *BreakfastDrinkRequestMessage) (*BreakfastDrinkResponseMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BreakfastDrink not implemented")
}
func (*UnimplementedDrinkServer) LunchDrink(ctx context.Context, req *LunchDrinkRequestMessage) (*LunchDrinkResponseMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LunchDrink not implemented")
}
func (*UnimplementedDrinkServer) DinnerDrink(ctx context.Context, req *DinnerDrinkRequestMessage) (*DinnerDrinkResponseMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DinnerDrink not implemented")
}

func RegisterDrinkServer(s *grpc.Server, srv DrinkServer) {
	s.RegisterService(&_Drink_serviceDesc, srv)
}

func _Drink_BreakfastDrink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BreakfastDrinkRequestMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DrinkServer).BreakfastDrink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/greetercenter.Drink/BreakfastDrink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DrinkServer).BreakfastDrink(ctx, req.(*BreakfastDrinkRequestMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _Drink_LunchDrink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LunchDrinkRequestMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DrinkServer).LunchDrink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/greetercenter.Drink/LunchDrink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DrinkServer).LunchDrink(ctx, req.(*LunchDrinkRequestMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _Drink_DinnerDrink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DinnerDrinkRequestMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DrinkServer).DinnerDrink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/greetercenter.Drink/DinnerDrink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DrinkServer).DinnerDrink(ctx, req.(*DinnerDrinkRequestMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _Drink_serviceDesc = grpc.ServiceDesc{
	ServiceName: "greetercenter.Drink",
	HandlerType: (*DrinkServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "BreakfastDrink",
			Handler:    _Drink_BreakfastDrink_Handler,
		},
		{
			MethodName: "LunchDrink",
			Handler:    _Drink_LunchDrink_Handler,
		},
		{
			MethodName: "DinnerDrink",
			Handler:    _Drink_DinnerDrink_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "greetercenter/greetercenter.proto",
}
